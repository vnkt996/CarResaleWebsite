/*
 * Created by Sai Venkat Banda on 2021.10.02
 * Copyright Â© 2021 Sai Venkat Banda. All rights reserved.
 */

package edu.vt.EntityBeans;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

/*
The @Entity annotation designates this class as a JPA Entity POJO class
representing the car table in the CountriesDB database.
 */
@Entity

// Name of the database table represented
@Table(name = "Car")


public class Car {

  /*
    ========================================================
    Instance variables representing the attributes (columns)
    of the Car table in the CarsDB database.

    CREATE TABLE car
    (
        id INT UNSIGNED NOT NULL AUTO_INCREMENT,
        make VARCHAR(64) NOT NULL,
        logo_filename VARCHAR(64) NOT NULL,
        make_url VARCHAR(128) NOT NULL,
        model VARCHAR(64) NOT NULL,
        year INT NOT NULL,
        price INT NOT NULL,
        mileage INT NOT NULL,
        city_mpg INT NOT NULL,
        highway_mpg INT NOT NULL,
        engine_type VARCHAR(64) NOT NULL,
        drive_type VARCHAR(64) NOT NULL,
        PRIMARY KEY (id)
    );
    ========================================================
     */
  private static final long serialVersionUID = 1L;

  /*
    Primary Key id is auto generated by the system as an Integer value
    starting with 1 and incremented by 1, i.e., 1,2,3,...
    A deleted entity object's primary key number is not reused.
     */
  // id INT UNSIGNED NOT NULL AUTO_INCREMENT
  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  @Basic(optional = false)
  @Column(name = "id")
  private Integer id;

  // Car Make
  // name VARCHAR(64) NOT NULL
  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 64)
  @Column(name = "make")
  private String make;

  // Car logo file name
  // name VARCHAR(64) NOT NULL
  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 64)
  @Column(name = "logo_filename")
  private String logoFileName;

  // Car make url
  // name VARCHAR(64) NOT NULL
  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 128)
  @Column(name = "make_url")
  private String makeUrl;

  // Car model
  // name VARCHAR(64) NOT NULL
  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 64)
  @Column(name = "model")
  private String model;

  // manufacture year
  // year INT NOT NULL
  @Basic(optional = false)
  @NotNull
  @Column(name = "year")
  private Integer year;

  // car price
  // car price INT NOT NULL
  @Basic(optional = false)
  @NotNull
  @Column(name = "price")
  private Integer price;

  // car mileage
  // car mileage INT NOT NULL
  @Basic(optional = false)
  @NotNull
  @Column(name = "mileage")
  private Integer mileage;

  // city mpg
  // city mpg INT NOT NULL
  @Basic(optional = false)
  @NotNull
  @Column(name = "city_mpg")
  private Integer cityMPG;

  // highway mpg
  // highway mpg INT NOT NULL
  @Basic(optional = false)
  @NotNull
  @Column(name = "highway_mpg")
  private Integer highwayMPG;

  // engine Type
  // name VARCHAR(64) NOT NULL
  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 64)
  @Column(name = "engine_type")
  private String engineType;

  // drive Type
  // name VARCHAR(64) NOT NULL
  @Basic(optional = false)
  @NotNull
  @Size(min = 1, max = 64)
  @Column(name = "drive_type")
  private String driveType;

  /*
    =================================================================
    Class constructors for instantiating a car entity object to
    represent a row in the Car table in the CarsDB database.
    =================================================================
     */
  // Used in PrepareCreate method in CarController
  public Car() {
  }

  // Not used but kept for potential future use
  public Car(Integer id, String make, String logoFileName, String makeUrl, String model, Integer year, Integer price, Integer mileage, Integer cityMPG, Integer highwayMPG, String engineType, String driveType) {
    this.id = id;
    this.make = make;
    this.logoFileName = logoFileName;
    this.makeUrl = makeUrl;
    this.model = model;
    this.year = year;
    this.price = price;
    this.mileage = mileage;
    this.cityMPG = cityMPG;
    this.highwayMPG = highwayMPG;
    this.engineType = engineType;
    this.driveType = driveType;
  }

  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public String getMake() {
    return make;
  }

  public void setMake(String make) {
    this.make = make;
  }

  public String getLogoFileName() {
    return logoFileName;
  }

  public void setLogoFileName(String logoFileName) {
    this.logoFileName = logoFileName;
  }

  public String getMakeUrl() {
    return makeUrl;
  }

  public void setMakeUrl(String makeUrl) {
    this.makeUrl = makeUrl;
  }

  public String getModel() {
    return model;
  }

  public void setModel(String model) {
    this.model = model;
  }

  public Integer getYear() {
    return year;
  }

  public void setYear(Integer year) {
    this.year = year;
  }

  public Integer getPrice() {
    return price;
  }

  public void setPrice(Integer price) {
    this.price = price;
  }

  public Integer getMileage() {
    return mileage;
  }

  public void setMileage(Integer mileage) {
    this.mileage = mileage;
  }

  public Integer getCityMPG() {
    return cityMPG;
  }

  public void setCityMPG(Integer cityMPG) {
    this.cityMPG = cityMPG;
  }

  public Integer getHighwayMPG() {
    return highwayMPG;
  }

  public void setHighwayMPG(Integer highwayMPG) {
    this.highwayMPG = highwayMPG;
  }

  public String getEngineType() {
    return engineType;
  }

  public void setEngineType(String engineType) {
    this.engineType = engineType;
  }

  public String getDriveType() {
    return driveType;
  }

  public void setDriveType(String driveType) {
    this.driveType = driveType;
  }

  /*
    ================================
    Instance Methods Used Internally
    ================================
  */

  // Generate and return a hash code value for the object with database primary key id
  @Override
  public int hashCode() {
    int hash = 0;
    hash += (id != null ? id.hashCode() : 0);
    return hash;
  }

  /*
   Checks if the car object identified by 'object' is the same as the car object identified by 'id'
   Parameter object = car object identified by 'object'
   Returns True if the car 'object' and 'id' are the same; otherwise, return False
   */
  @Override
  public boolean equals(Object object) {
    if (!(object instanceof Car)) {
      return false;
    }
    Car other = (Car) object;
    return (this.id != null || other.id == null) && (this.id == null || this.id.equals(other.id));
  }

  // Return String representation of database primary key id
  @Override
  public String toString() {
    return id.toString();
  }
}
